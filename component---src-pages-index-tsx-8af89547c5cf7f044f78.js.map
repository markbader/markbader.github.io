{"version":3,"file":"component---src-pages-index-tsx-8af89547c5cf7f044f78.js","mappings":"oPAMO,MAAMA,EAAsCC,IAAc,IAAb,KAAEC,GAAMD,EAC1D,MAAM,MAAEE,GAAUD,EAAKE,kBACjBC,EAAOH,EAAKI,eAMlB,OAJAC,EAAAA,WAAgB,KACdC,SAASC,cAAc,QAASC,SAAS,EAAG,EAAE,GAC7C,IAGDH,EAAAA,cAACI,EAAAA,GAAI,CAACC,UAAWC,EAAAA,IACfN,EAAAA,cAAA,YACEA,EAAAA,cAACI,EAAAA,GAAI,CAACC,UAAWC,EAAAA,IACfN,EAAAA,cAACO,EAAAA,GAAM,CACLC,MAAOV,EAAKW,YAAYD,QAC1BR,EAAAA,cAACU,EAAAA,GAAI,CAACC,OAAOC,EAAAA,EAAAA,GAASd,EAAKW,YAAYE,OAASE,UAAQ,GACtDb,EAAAA,cAACc,EAAAA,GAAI,CAACT,UAAWC,EAAAA,GAAiBS,KAAMjB,EAAKkB,SAI/CpB,EAAMqB,KAAKC,GACTlB,EAAAA,cAACI,EAAAA,GAAI,CAACe,IAAKD,EAAME,WAAYf,UAAWC,EAAAA,IACtCN,EAAAA,cAACO,EAAAA,GAAM,CAACC,MAAOU,EAAME,aACpBF,EAAMG,MAAMC,MAAM,EAAG,GAAGL,KAAIM,IAAA,IAAC,KAAEC,GAAWD,EAAA,OACzCvB,EAAAA,cAACU,EAAAA,GAAI,CAACL,UAAWC,EAAAA,GAAca,IAAKK,EAAKC,OAAOC,KAAMf,OAAOC,EAAAA,EAAAA,GAASY,EAAKf,YAAYE,OAASgB,UAAWH,EAAKC,OAAOC,KAAMlB,MAAOgB,EAAKf,YAAYD,MAAOoB,YAAaJ,EAAKf,YAAYmB,aAAe,IAE3M5B,EAAAA,cAAC6B,EAAAA,GAAI,CAACC,GAAI,IAAIZ,EAAME,mBAK5BpB,EAAAA,cAAC+B,EAAAA,GAAM,MACD,EA2CZ,YAEO,MAAMC,EAAOC,IAAmB,IAAlB,KAAEtC,GAAWsC,EAChC,OACEjC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMkC,KAAK,OACXlC,EAAAA,cAAA,aAAQ,cACRA,EAAAA,cAAA,QAAMmC,KAAK,cAAcC,QAAQ,mDACjCpC,EAAAA,cAAA,QAAMqC,QAAQ,UACdrC,EAAAA,cAAA,QAAMsC,IAAI,OAAOC,MAAMC,EAAAA,EAAAA,GAAO7C,EAAKI,eAAeU,YAAYE,SAC9DX,EAAAA,cAAA,QAAMmC,KAAK,WAAWC,QAAQ,wCAC9BpC,EAAAA,cAAA,QAAMmC,KAAK,eAAeC,QAAQ,wBAClCpC,EAAAA,cAAA,QAAMmC,KAAK,gBAAgBC,QAAS,eACpCpC,EAAAA,cAAA,QAAMmC,KAAK,sBAAsBC,QAASzC,EAAKI,eAAeU,YAAYmB,cAC1E5B,EAAAA,cAAA,QAAMmC,KAAK,gBAAgBC,SAASI,EAAAA,EAAAA,GAAO7C,EAAKI,eAAeU,YAAYE,SAC3EX,EAAAA,cAAA,QAAMyC,SAAS,eAAeL,QAAQ,kBACtCpC,EAAAA,cAAA,QAAMyC,SAAS,UAAUL,QAAQ,YACjCpC,EAAAA,cAAA,QAAMyC,SAAS,SAASL,QAAQ,8BAChCpC,EAAAA,cAAA,QAAMyC,SAAS,WAAWL,SAASI,EAAAA,EAAAA,GAAO7C,EAAKI,eAAeU,YAAYE,SAC1EX,EAAAA,cAAA,QAAMyC,SAAS,WAAWL,QAAS,eAClC,C","sources":["webpack://markbader.github.io/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { Card, Footer, Header, More, View, Text } from \"../components\";\nimport * as presets from \"../theme/index.module.scss\";\nimport { getImage, getSrc } from \"gatsby-plugin-image\";\n\nexport const IndexPage: React.FC<PageProps<any>> = ({ data }) => {\n  const { group } = data.allMarkdownRemark;\n  const info = data.markdownRemark;\n\n  React.useEffect(() => {\n    document.querySelector(`body`)!.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <View className={presets.screen}>\n      <main>\n        <View className={presets.landingpage}>\n          <Header\n            title={info.frontmatter.title} />\n          <Card image={getImage(info.frontmatter.image)!} expanded>\n            <Text className={presets.article} text={info.html} />\n          </Card>\n        </View>\n        {\n          group.map((topic: any) => (\n            <View key={topic.fieldValue} className={presets.page}>\n              <Header title={topic.fieldValue} />\n              {topic.edges.slice(0, 4).map(({ node }: any) => (\n                <Card className={presets.card} key={node.fields.slug} image={getImage(node.frontmatter.image)!} onClickTo={node.fields.slug} title={node.frontmatter.title} description={node.frontmatter.description} />\n              ))}\n              <More to={`/${topic.fieldValue}`} />\n            </View>\n          ))\n        }\n      </main >\n      <Footer />\n    </View >\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: {frontmatter: {topic: {ne: \"about_me\"}}}) {\n      group(field: {frontmatter: {topic: SELECT}}) {\n        fieldValue\n        totalCount\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              image{\n                childImageSharp {\n                  gatsbyImageData(width: 800)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    markdownRemark(frontmatter: { topic: { eq: \"about_me\" }}) {\n      frontmatter {\n        title\n        image{\n          childImageSharp {\n            gatsbyImageData(width: 800)\n          }\n        }\n      }\n      html\n    }\n  }\n`;\n\n\nexport default IndexPage\n\nexport const Head = ({ data }: any) => {\n  return (\n    <>\n      <html lang=\"de\" />\n      <title>{`Mark Bader`}</title>\n      <meta name=\"description\" content=\"Mark Bader • IT-Systems Engineer • HPI Student\" />\n      <meta charSet=\"utf-8\" />\n      <link rel=\"icon\" href={getSrc(data.markdownRemark.frontmatter.image)} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={`Mark Bader`} />\n      <meta name=\"twitter:description\" content={data.markdownRemark.frontmatter.description} />\n      <meta name=\"twitter:image\" content={getSrc(data.markdownRemark.frontmatter.image)} />\n      <meta property=\"og:site_name\" content=\"Marks Website\"></meta>\n      <meta property=\"og:type\" content=\"website\"></meta>\n      <meta property=\"og:url\" content=\"https://www.markbader.de/\"></meta>\n      <meta property=\"og:image\" content={getSrc(data.markdownRemark.frontmatter.image)}></meta>\n      <meta property=\"og:title\" content={`Mark Bader`}></meta>\n    </>\n  )\n}\n\n"],"names":["IndexPage","_ref","data","group","allMarkdownRemark","info","markdownRemark","React","document","querySelector","scrollTo","View","className","presets","Header","title","frontmatter","Card","image","getImage","expanded","Text","text","html","map","topic","key","fieldValue","edges","slice","_ref2","node","fields","slug","onClickTo","description","More","to","Footer","Head","_ref3","lang","name","content","charSet","rel","href","getSrc","property"],"sourceRoot":""}